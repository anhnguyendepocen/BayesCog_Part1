#------------------------------------------------------------------------------
# one sample t-test , to test if 'acc' is above chance level
t.test(df$acc, mu = 0.5)
cor.test(df$IQ, df$acc)
#install.packages("ggplot2")
library(ggplot)
library(ggplot2)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
graphics.off()
g1 <- ggplot(df, aes(IQ,acc))
g1
g1 <- g1 + geom_jitter(width=0.0, height=0.0, size=5, colour='skyblue', alpha=0.95)
g1
g1 <- g1 + myconfig + labs(x = 'IQ', y = 'Choice accuracy (%)')
1
g1
g1 <- g1 + geom_smooth(method = "lm", se = T, colour='skyblue3')
g1
clc
diag_ma
library(rstan)
lookup(diag)
m = rnorm(3,1)
m
m = rnorm(3,2)
m
m = as.matrix(rnorm(12) ,3,4)
m
m = as.matrix(rnorm(12) ,c(3,4))
m
?as.matrix
m = as.matrix(rnorm(12),3,4))
m = as.matrix(rnorm(12),3,4)
m
rnorm(12)
m = matrix(rnorm(12),3,4)
m
diag(m)
m
m = round(m)
m
m = round(m.1)
m = round(matrix(rnorm(12),3,4),1)
m
m
diag(m)
R.version
getwd()
getwd()
dir()
ls()
a = 2
a
ls()
q
a =2
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
cat("Hello", "World")
paste0('C:/', 'Group1')
a = cat("Hello", "World")
a
b = paste0('C:/', 'Group1')
b
"hello world"
a= "hello world"
a= hello world
a= cat("hello world")
a
class(cat("hello world"))
? cat
? cat
rm(list = ls())
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
print('hello world')
a1 <- 5
a2 <- as.integer(a1)
class(a1)
class(a2)
## logical
c1 <- T; c2 <- TRUE; c3 <- F; c4 <- FALSE
class(c1)
# factor
f <- factor(letters[c(1, 1, 2, 2, 3:10)])
class(f)
#------------------------------------------------------------------------------
## Data Types
# vector
v1 <- 1:12
v2 <- c(2,4,1,5,1,6, 13:18)
v3 <- c(rep('aa',4), rep('bb',4), rep('cc',4))
class(v1)
class(v2)
class(v3)
# matrix and array
m1 <- matrix(v1, nrow=3, ncol=4)
m2 <- matrix(v1, nrow=3, ncol=4, byrow = T)
arr <- array(v1, dim=c(2,2,3))
class(m1)
class(arr)
# dataframe
df <- data.frame(v1=v1, v2=v2, v3=v3, f=f)
class(df)
str(df)
class(df$v1)
class(df$v2)
class(df$v3)
class(df$f)
class(b1)
class(b2)
b1 <- 'Hello World!'
b2 <- "Hello World!"
class(b1)
class(b2)
class(c1)
class(NA)
f <- factor(letters[c(1, 1, 2, 2, 3:10)])
class(f)
f
v1 <- 1:12
v2 <- c(2,4,1,5,1,6, 13:18)
v3 <- c(rep('aa',4), rep('bb',4), rep('cc',4))
m1 <- matrix(v1, nrow=3, ncol=4)
m2 <- matrix(v1, nrow=3, ncol=4, byrow = T)
v
v1
m1
m2
df <- data.frame(v1=v1, v2=v2, v3=v3, f=f)
df
str(f)
class(f)
class(df)
str(df)
str(df)
t <- runif(1) # random number between 0 and 1
t
t <- runif(1) # random number between 0 and 1
t
t = .1
if (t <= 1/3) {
cat("t =", , ", t <= 1/3. \n")
} else if () {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <= 1/3
cat("t =", , ", t <= 1/3. \n")
cat("t =", t, ", t <= 1/3. \n")
t = .5
t = .8
t
t > 2/3
cat("t =", t, ", t > 2/3. \n")
t = .5
t
cat("t =", t, ", 1/3 < t <= 2/3. \n")
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", t, ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
month_name
month_name
month_name[1]
month_name[2]
month_name[3]
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat("This month is", month_name[j])
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat("This month is", month_name[j], ". \n")
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat("This month is", month_name[j], " \n")
}
rm(list = ls())
a = 5
ls()
my_mean <- function(x) {
x_bar <- sum(x) / length(x)
return(x_bar)
}
ls()
class(my_mean)
tmp <- rnorm(10)
tmp
my_mean(tmp)
all.equal(mean(tmp), my_mean(tmp))
b = c(1,2,NA)
sum(b,na.rm=T)
sum(na.omit(b))
data_dir = ('_data/RL_raw_data/sub01/raw_data_sub01.txt')
data = read.table(data_dir, header = T, sep = ",")
head(data)
head(data, 10)
tail(data)
tail(data, 10)
head(data, 10)
complete.cases(data)
sum(complete.cases(data))
data_dir = ('_data/RL_raw_data/sub01/raw_data_sub01.txt')
data = read.table(data_dir, header = T, sep = ",")
head(data)
sum(complete.cases(data))
complete.cases(data)
data[complete.cases(data),]
data = data[complete.cases(data),]
a = 1
a = 2
a
data = data[complete.cases(data),]
dim(data)
'_data/RL_raw_data/sub01/raw_data_sub01.txt'
ns = 10
data_dir = '_data/RL_raw_data'
rawdata = c()
for (s in 1:ns) {
sub_file = file.path(, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_data = read.table(sub_file, header = T, sep = ",")
rawdata = rbind(rawdata, sub_data)
}
ns = 10
data_dir = '_data/RL_raw_data'
rawdata = c()
for (s in 1:ns) {
sub_file = file.path(, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_data = read.table(sub_file, header = T, sep = ",")
rawdata = rbind(rawdata, sub_data)
}
s =1
sub_file = file.path(, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
? file.path
pile.path('a','b','c','d')
file.path('a','b','c','d')
file.path('a','b','c','d')
file.path('C:/','mydata','c','d')
file.path('C:','mydata','c','d')
sprintf('sub%02i/raw_data_sub%02i.txt',s,s)
file.path(data_dir , sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
ns = 10
data_dir = '_data/RL_raw_data'
rawdata = c()
for (s in 1:ns) {
sub_file = file.path(data_dir , sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_data = read.table(sub_file, header = T, sep = ",")
rawdata = rbind(rawdata, sub_data)
}
sprintf('sub%i',1)
sprintf('sub%i',2)
sprintf('sub%i',1000)
sprintf('sub%i',2)
sprintf('sub%i',1)
sprintf('sub%i',10)
sprintf('sub%i',11)
sprintf('sub%02i',1)
sprintf('sub%03i',1)
sprintf('sub%04i',1)
sprintf('sub%s','a')
sprintf('sub_%s','a')
A = c('a','b','c','d','e')
A
A
for (j in 1:length(A)) { sprintf('sub_%s \n', A[j]) }
for (j in 1:length(A)) { print(sprintf('sub_%s \n', A[j]) )}
for (j in 1:length(A)) { print(sprintf('sub_%s', A[j]) )}
for (j in 1:length(A)) { print(sprintf('sub_%i_%s', j, A[j]) )}
A = c('a','b','c','d','e')
rawdata = rawdata[complete.cases(rawdata),]
dim(rawdata)
(rawdata$choice == rawdata$correct)
(rawdata$choice == rawdata$correct) * 1.0
rawdata$accuracy = (rawdata$choice == rawdata$correct) * 1.0
head(rawdata)
aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)
aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), sunm)[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), sum)[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), length)[,2]
a= aggregate(rawdata$accuracy, by = list(rawdata$subjID), sum)[,2]
b = aggregate(rawdata$accuracy, by = list(rawdata$subjID), length)[,2]
a /b
aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)[,2]
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/rl_mp.RData')
load('data/PPC_rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/PPC_rl_mp.RData')
sz <- dim(rl_mp)
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/PPC/rl_mp.RData')
setwd("E:/projects/00_ongoing/RLSCAN")
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/PPC/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile <- 'rl_ppc.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
setwd("E:/my_paper/code_materials/zhang_lengersdorff_mikus_glaescher_lamm_rl_fitfalls_suggestions")
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/PPC/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile <- 'code/rl_ppc.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
fit_rl <- stan(modelFile,
data    = dataList,
chains  = 1,
iter    = 1,
warmup  = 0,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
? dnorm
? binomial
? gamma
? dnorm
dnorm(x, mean = 2, sd = 5)
x = -20:20
x
?seq
x = seq(from=-20, to =20, by=0.1)
x
x = seq(from=-20, to =20, by=0.1)
length(x)
dnorm(x, mean = 2, sd = 5)
y = dnorm(x, mean = 2, sd = 5)
x = seq(from=-20, to =20, by=0.1)
y = dnorm(x, mean = 2, sd = 5)
plot(x,y)
plot(x,y, style = 'l')
plot(x,y, type = 'l')
plot(x,y, type = 'l')
x = seq(from=-20, to =20, by=0.1)
y = dnorm(x, mean = 2, sd = 5)
plot(x,y, type = 'l')
y_cdf = pnorm(x, 2, 5)
plot(x,y_cdf, type = 'l')
